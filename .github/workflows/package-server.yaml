name: Package PX Server

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [10.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v1

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache
        uses: actions/cache@v1.0.3
        with:
          path: node_modules
          key: ${{ runner.os }}-node${{ matrix.node-version }}-${{ hashFiles('**/package-lock.json') }}

      - name: Install packages and build with Node.js ${{ matrix.node-version }}
        env:
          CI: true
        run: |
          npm install
          npm run build
          echo "::set-env name=BUILD_VERSION::$(node -p "require('./package').version")"

      - name: Upload artifacts
        uses: actions/upload-artifact@v1
        if: success()
        with:
          name: px-server-${{ runner.os }}
          path: dist

  draft-release:

    needs: build

    runs-on: ubuntu-latest

#    if: ${{ github.event_name == 'release' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v1

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache
        uses: actions/cache@v1.0.3
        with:
          path: node_modules
          key: ${{ runner.os }}-node${{ matrix.node-version }}-${{ hashFiles('**/package-lock.json') }}

      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          path: .

      - name: Package artifacts for release
        if: ${{ github.event_name == 'push' || github.event_name == 'pull_request' }}
        run: |
          mkdir -p packages
          zip -9 -j packages/px-mac.zip px-server-Linux/*
          zip -9 -j packages/px-windows.zip px-server-Windows/*
          zip -9 -j packages/px-linux.zip px-server-macOS/*

      - name: Draft new release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npm install
          npm run release

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_API_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: us-east-1

      - name: Deploy to s3
        working-directory: packages
        run: |
          ls -laR
          aws s3 cp *.zip s3://${{ secrets.AWS_S3_BUCKET }}/0.0.2 --recursive --acl public-read'

